#include <ncurses/curses.h>
#include <iostream>

void registrasi() {
    ofstream file, accList;
    mvprintw(5, 40, "------Registrasi------");
    mvprintw(6, 40, "Username: ");
    int maxKarakter = 100;
    char userInput[maxKarakter];
    
    int i = 0;
    while (1) {
        int ch = getch(); 
        
        if (ch == 10) {  
            break;
        }
        else if (ch == 127 || ch == 8 || ch == KEY_BACKSPACE) { 
            if (i > 0) {
                userInput[i - 1] = '\0'; 
                i--;
                printw("\b \b");  
                refresh();
            }
        }
        else if (i < maxKarakter - 1) {  
            userInput[i++] = ch;  
            printw("%c", ch);  
            refresh();
        }
    }
    userInput[i] = '\0';  
    
    string userRegs = userInput;
    file.open(userRegs + ".txt");
    file << 0;  
    file.close();
    
    accList.open("ListAccount.txt", ios::app);
    accList << userRegs << endl;
    accList.close();
    
    clear();
    mvprintw(5, 40, "Registrasi Selesai");
    refresh(); 
    getch();
}

void login(bool &loginSuccess) {
    ifstream file;
    mvprintw(5, 40, "------LOGIN------");
    mvprintw(6, 40, "Username: ");
    refresh();
    int maxKarakter = 100;
    char userInpt[maxKarakter];
    string userData;
    int i = 0;
    while (1) {
        int ch = getch(); 
        
        if (ch == 10) {  
            break;
        }
        else if (ch == 127 || ch == 8 || ch == KEY_BACKSPACE) { 
            if (i > 0) {
                userInpt[i - 1] = '\0'; 
                i--;
                printw("\b \b");  
                refresh();
            }
        }
        else if (i < maxKarakter - 1) {  
            userInpt[i++] = ch;  
            printw("%c", ch);  
            refresh();
        }
    }
    userInpt[i] = '\0';
    string userLog = userInpt;
    file.open("ListAccount.txt");
    bool exist = false;
    while (file >> userData) {
        if (userLog == userData) {
            exist = true;
        }
    }
    file.close();
    
    clear();
    if (exist) {
        file.open(userLog + ".txt");
        mvprintw(5, 40, "Login Berhasil");
        refresh();
        loginSuccess = true; 
        getch();
        file.close();
    } else {
        mvprintw(5, 40, "Login Gagal, pastikan username anda benar");
        refresh();
        loginSuccess = false;  
        getch();
    }
}

void menu(WINDOW *menu_win, int pilihanTerpilih, const char *opsi[], int jumlahOpsi);
void loadingBar(){
    
initscr();
for (int i=0; i<4; i++) {
mvprintw(12, 50, "Loading...");
mvprintw(13, 50, "------------------"); 
mvprintw(14, 50, "|                |");
mvprintw(15, 50, "------------------");

for (int f=1; f<17; f++) {
mvprintw(14, 50 + f, ">");
refresh(); 
Sleep (100); 
}
}
}

int main(){
	system("color C");
	initscr();
	clear();
	noecho();
	cbreak();
	int awalX = 50, awalY = 10; 
	int lebar = 15, tinggi = 12;
	
	WINDOW *menu_win = newwin(tinggi, lebar, awalY, awalX);
	keypad(menu_win, TRUE);
	
	mvprintw(5, 39, ">>>Selamat Datang di Menu Permainan<<<");
	refresh();
	
	mvprintw(8, 44, "Silahkan Pilih Menu Di Bawah");
	refresh();
	
	const char *opsi[] = {
	"|    Start   |", 
	"|Leader Board|", 
	"|   Setting  |", 
	"|    Exit    |" 
	
	};
	int jumlahOpsi = sizeof(opsi) / sizeof(char *);
	int pilihanTerpilih = 0;
	int pilihan = -1;
	
	while (1){
		menu(menu_win, pilihanTerpilih, opsi, jumlahOpsi);
		int tombol = wgetch(menu_win);
		switch (tombol){
			case KEY_UP :
				if (pilihanTerpilih == 0)
				pilihanTerpilih = jumlahOpsi - 1;
				else 
				--pilihanTerpilih;
				break;
			case KEY_DOWN:
				if (pilihanTerpilih == jumlahOpsi - 1)
				pilihanTerpilih = 0;
				else
				++pilihanTerpilih;
				break;
			case 10:
				pilihan = pilihanTerpilih;
				break;
		}
		if (pilihan == 3)
		break;
	}
	clear();
ladingBar();
	clrtoeol();
	refresh();
	endwin();
	return 0;
} 

void menu(WINDOW *menu_win, int pilihanTerpilih, const char *opsi[], int jumlahOpsi){

  for (int i = 0; i < jumlahOpsi; i++){
	if (i == pilihanTerpilih)
	wattron(menu_win, A_REVERSE);
	mvwprintw(menu_win, i + 1, 1, opsi[i]);
	wattroff(menu_win, A_REVERSE);
}
wrefresh(menu_win);
}
