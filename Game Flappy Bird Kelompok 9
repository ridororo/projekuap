#include <iostream>
#include <ncurses/ncurses.h>
#include <fstream>
#include <windows.h>
#include <iomanip>

using namespace std;
void registrasi() {
    ofstream file, accList;
    mvprintw(10, 50, "------(Registrasi)------");
    mvprintw(12, 50, "Username: ");
    int maxKarakter = 100;
    char userInput[maxKarakter];
    
    int i = 0;
    while (1) {
        int ch = getch(); 
        
        if (ch == 10) {  
            break;
        }
        else if (ch == 127 || ch == 8 || ch == KEY_BACKSPACE) { 
            if (i > 0) {
                userInput[i - 1] = '\0'; 
                i--;
                printw("\b \b");  
                refresh();
            }
        }
        else if (i < maxKarakter - 1) {  
            userInput[i++] = ch;  
            printw("%c", ch);  
            refresh();
        }
    }
    userInput[i] = '\0';  
    
    string userRegs = userInput;
    file.open(userRegs + ".txt");
    file << 0;  
    file.close();
    
    accList.open("ListAccount.txt", ios::app);
    accList << userRegs << endl;
    accList.close();
    
    clear();
    mvprintw(12, 50, "Registrasi Selesai");
    refresh(); 
    getch();
}

void login(bool &loginSuccess, string &user) {
    ifstream file;
    mvprintw(10, 50, "------(LOGIN)------");
    mvprintw(12, 50, "Username: ");
    refresh();
    int maxKarakter = 100;
    char userInpt[maxKarakter];
    string userData;
    int i = 0;
    while (1) {
        int ch = getch(); 
        
        if (ch == 10) {  
            break;
        }
        else if (ch == 127 || ch == 8 || ch == KEY_BACKSPACE) { 
            if (i > 0) {
                userInpt[i - 1] = '\0'; 
                i--;
                printw("\b \b");  
                refresh();
            }
        }
        else if (i < maxKarakter - 1) {  
            userInpt[i++] = ch;  
            printw("%c", ch);  
            refresh();
        }
    }
    userInpt[i] = '\0';
    string userLog = userInpt;
    file.open("ListAccount.txt");
    bool exist = false;
    while (file >> userData) {
        if (userLog == userData) {
            exist = true;
        }
    }
    file.close();
    
    clear();
    if (exist) {
        file.open(userLog + ".txt");
        mvprintw(12, 50, "Login Berhasil");
        refresh();
        loginSuccess = true; 
		user=userLog; 
        getch();
        file.close();
    } else {
        mvprintw(12, 45, "Login Gagal, pastikan username anda benar");
        refresh();
        loginSuccess = false;  
        getch();
    }
}


int main(){
  system("color C");
	initscr();
	clear();
  noecho();
    
    char choice;
    bool loginSuccess = false;  
    string user;

    while (!loginSuccess) {  
    clear();
        mvprintw(10, 40, "Login Terlebih dahulu/ Register untuk username baru");
        mvprintw(11, 40, "1. Login");
        mvprintw(12, 40, "2. Register");
        mvprintw(13, 40, "Pilih [1/2]: ");
        choice = getch();
        if (choice == '1') {
            clear();
            login(loginSuccess,user);  
        } else if (choice == '2') {
            clear();
            registrasi();
        } else {
            continue;  
        }
    }
	clear();
	noecho();
	cbreak();
	int awalX = 50, awalY = 10; 
	int lebar = 16, tinggi = 5;
	
	WINDOW *menu_win = newwin(tinggi, lebar, awalY, awalX);
	keypad(menu_win, TRUE);
	
	const char* userChar=user.c_str();
	
	
	const char *opsi[] = {
	"|    Start   |", 
	"|LeaderBoard |",
	"|    Exit    |" 
	
	};
	int jumlahOpsi = sizeof(opsi) / sizeof(char *);
	int pilihanTerpilih = 0;
	int pilihan = -1;
	
	
    keypad(menu_win, TRUE);
	
	int score;
	int tinggi_layar, lebar_layar;
    getmaxyx(stdscr, tinggi_layar, lebar_layar);
	
	while (1){
		box (menu_win,0,0);
		mvprintw(8, 44, "Silahkan Pilih Menu Di Bawah");
		mvprintw(5, 39, ">>>Selamat Datang di Menu Permainan, %s<<<",userChar);
		refresh();
		menu(menu_win, pilihanTerpilih, opsi, jumlahOpsi);
		int tombol = wgetch(menu_win);
		switch (tombol){
			case KEY_UP :
				if (pilihanTerpilih == 0)
				pilihanTerpilih = jumlahOpsi - 1;
				else 
				--pilihanTerpilih;
				break;
			case KEY_DOWN:
				if (pilihanTerpilih == jumlahOpsi - 1)
				pilihanTerpilih = 0;
				else
				++pilihanTerpilih;
				break;
			case 10:
				pilihan = pilihanTerpilih;
				break;
		
		}
		
		clear();
if (pilihan == 0) { 
            loadingBar();
            clear ();
            mvprintw(14,35," Selamat datang di Flappy Bird tekan spasi untuk mulai ");
            char spasi=getch();
            if(spasi==' '){
            	flappy_game(score); 
            	
            	mvprintw(11,50, "Burung %s tewas", userChar);
            	refresh();
            	Beep(100,1000);
            	Beep(500,1000);
            	Beep(400,1000);
            	Beep(500,1000);
            	clear();
            	mvprintw(11, 50,  "GAME OVER! Final Score: %d", score);
            	refresh();
  				mvprintw(12, 45,"...Klik Apapun Untuk Melanjutkan...");
  				
    			refresh();
    			getch();

			    ofstream file("score.txt", ios::app);
    			if (file.is_open()) {
        			file <<setw(30)<<left<<user<<setw(30)<<left<< score << endl;
       			 	file.close();
    			}
			}
            clear();
            pilihan=-1;
            continue;

}
